{"version":3,"sources":["components/Contacts.js","components/PersonForm.js","components/Notification.js","services/phonebookService.js","App.js","reportWebVitals.js","index.js"],"names":["Contact","person","deletePhoneBookEntry","name","number","onClick","window","confirm","id","deleteEntry","Contacts","personsList","newFilter","filter","toLowerCase","includes","map","PersonForm","setNewNameInput","newName","setNewPhoneNumberInput","newPhoneNumber","addNewName","onChange","value","type","Notification","notification","messageMapping","UPDATE","ADD","ERROR","DELETE","messageType","className","message","baseUrl","exportedObject","getAllPhonebookEntries","axios","get","then","response","data","addPhonebookEntry","newPersonObject","post","delete","updatePhoneBookEntry","updatedEntry","put","App","useState","persons","setPersons","setNewFilter","setNewName","setNewPhoneNumber","setNewNotification","useEffect","phonebookService","catch","error","console","log","newNotification","setTimeout","Filter","setNewFilterValue","e","target","preventDefault","existingPersonEntry","find","updatedPerson","alert","newPerson","concat","deletedEntry","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9850029.chunk.js","sourcesContent":["import React from 'react';\n\nconst Contact = ({ person, deletePhoneBookEntry }) => {\n\n    const deleteEntry = person => {\n        var result = window.confirm(`Delete ${person.name}?`);\n        if (result) {\n            deletePhoneBookEntry(person.id)\n        }\n    }\n\n    return (\n        <div>\n            {person.name} {person.number} \n            <button onClick={() => deleteEntry(person)}>delete</button>\n        </div>\n    )\n}\n\nconst Contacts = ({ personsList, newFilter, deletePhoneBookEntry}) => {\n    return (\n        <div>\n            {personsList.filter(person => person.name.toLowerCase().includes(newFilter)).map(\n                person => <Contact key={person.id} person={person} deletePhoneBookEntry={deletePhoneBookEntry}/>\n            )}\n        </div>\n    )\n}\n\nexport default Contacts;","import React from 'react';\n\nconst PersonForm = ({ setNewNameInput , newName, setNewPhoneNumberInput, newPhoneNumber, addNewName}) => {\n\n    return (\n        <form>\n            <div>\n                name: <input onChange={setNewNameInput} value={newName} />\n            </div>\n            <div>\n                number: <input onChange={setNewPhoneNumberInput} value={newPhoneNumber} />\n            </div>\n            <div>\n                <button onClick={addNewName} type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Notification = ({ notification }) => {\n\n    if (notification === null) {\n        return null\n    }\n\n    const messageMapping = {\n        UPDATE: 'success',\n        ADD: 'success',\n        ERROR: 'error',\n        DELETE: 'success'\n    }\n    \n    const messageType = notification && messageMapping[notification.type] ? messageMapping[notification.type]: null;\n\n    return (\n        <div className={messageType}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification;","import axios from 'axios';\n\nconst baseUrl = 'https://safe-scrubland-67754.herokuapp.com/api/persons';\n\nconst getAllPhonebookEntries = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => {\n        return response.data;\n    });\n}\n\nconst addPhonebookEntry = newPersonObject => {\n    const request = axios.post(baseUrl, newPersonObject);\n    return request.then(response => { \n        return response.data \n    });\n}\n\nconst deletePhoneBookEntry = id => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => {\n        return response;\n    });\n}\n\nconst updatePhoneBookEntry = (id, updatedEntry) => {\n    const request = axios.put(`${baseUrl}/${id}`, updatedEntry);\n    return request.then(response => {\n        return response;\n    });\n}\n\nconst exportedObject = {\n    getAllPhonebookEntries,\n    addPhonebookEntry,\n    deletePhoneBookEntry,\n    updatePhoneBookEntry\n}\n\nexport default exportedObject;","import React, { useEffect, useState } from 'react'\nimport Contacts from './components/Contacts.js';\nimport PersonForm from './components/PersonForm.js';\nimport Notification from './components/Notification.js';\n\nimport phonebookService from './services/phonebookService.js';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [notification, setNewNotification] = useState(null);\n\n  const fetchPersonsHook = () => {\n    phonebookService.getAllPhonebookEntries()\n    .then(response => {\n      setPersons(response);\n    })\n    .catch(error => console.log(error));\n  }\n\n  useEffect(fetchPersonsHook, []);\n\n  const addNewName = (e) => {\n    e.preventDefault();\n    var existingPersonEntry = persons.find(person => person.name === newName);\n    if (existingPersonEntry) {\n      const updatedPerson = {...existingPersonEntry, number: newPhoneNumber};\n    \n      var result = window.confirm(`${existingPersonEntry.name} is already added to phonebook, replace the old number with a new one?`);\n      if (result) {\n        updatePhoneBookEntry(existingPersonEntry.id, updatedPerson)\n\n      }    \n    } else if (!existingPersonEntry) {\n      if (newName === '' || newPhoneNumber === '') return;\n      const newPerson = {\n        name: newName,\n        number: newPhoneNumber\n      }\n      const newNotification = {\n        message: `Added ${newPerson.name}`,\n        type: 'ADD'\n      }\n      phonebookService.addPhonebookEntry(newPerson).then(response => {\n        setPersons(persons.concat(response));\n        setNewName('');\n        setNewPhoneNumber('')\n        setNewNotification(newNotification)\n        setTimeout(() => {\n          setNewNotification(null)\n        }, 5000)\n      }).catch( () => {\n        const newNotification = {\n          message: `Failed add entry for ${existingPersonEntry.name}`,\n          type: 'ERROR'\n        }\n        setNewNotification(newNotification);\n        setTimeout(() => {\n          setNewNotification(null)\n        }, 5000)\n      })\n    } else {\n      alert(`${newName} is already added to phonebook`);\n    }\n  }\n\n  const deletePhoneBookEntry = id => {\n    phonebookService.deletePhoneBookEntry(id).then(() => {\n      var deletedEntry = persons.find(person => person.id === id);\n      const newNotification = {\n        message: `Deleted entry for ${deletedEntry.name}`,\n        type: 'DELETE'\n      }\n      setNewNotification(newNotification);\n      setTimeout(() => {\n        setNewNotification(null)\n      }, 5000);\n      setPersons(persons.filter(person => person.id !== id))\n    }).catch(error => console.log(error));\n  }\n\n  const updatePhoneBookEntry = (id, updatedEntry) => {\n    phonebookService.updatePhoneBookEntry(id, updatedEntry).then(() => {\n      setPersons(persons.map(person => person.id !== id ? person: updatedEntry))\n      const newNotification = {\n        message: `Updated phone number for ${updatedEntry.name}`,\n        type: 'UPDATE'\n      }\n      setNewNotification(newNotification);\n      setTimeout(() => {\n        setNewNotification(null)\n      }, 5000);\n    }).catch( () => {\n      const newNotification = {\n        message: `Failed to update phone number for ${updatedEntry.name}`,\n        type: 'ERROR'\n      }\n      setNewNotification(newNotification);\n      setTimeout(() => {\n        setNewNotification(null)\n      }, 5000);\n    })\n  }\n\n  const setNewNameInput = (e) => {\n    setNewName(e.target.value);\n  }\n\n  const setNewPhoneNumberInput = (e) => {\n    setNewPhoneNumber(e.target.value);\n  }\n\n  \n  const setNewFilterValue = (e) => {\n    setNewFilter(e.target.value);\n  }\n  \n  const Filter = ({ setNewFilterValue, newFilter}) => {\n    return (\n    <p>filter shown with <input onChange={setNewFilterValue} value={newFilter} /></p>\n    )\n  }\n\n  return (\n    <div>\n      <Notification notification={notification}/>\n      <h2>Phonebook</h2>\n      <Filter setNewFilterValue={setNewFilterValue} newFilter={newFilter} />\n      <h3>Add a new</h3>\n      <PersonForm setNewNameInput={setNewNameInput}\n        newName={newName}\n        setNewPhoneNumberInput={setNewPhoneNumberInput}\n        newPhoneNumber={newPhoneNumber}\n        addNewName={addNewName}\n        />\n      <h3>Numbers</h3>\n      <Contacts \n        personsList={persons}\n        newFilter={newFilter} \n        deletePhoneBookEntry={deletePhoneBookEntry}\n         />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}